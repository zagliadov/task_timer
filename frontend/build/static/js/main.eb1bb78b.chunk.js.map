{"version":3,"sources":["Home/components/Time/time.module.sass","Header/components/Nav/nav.module.sass","features/utils/PleaseLogIn/pleaselogin.module.sass","Home/components/Payment/payment.module.sass","Error/error.module.sass","Home/components/TimerItem/timeritem.module.sass","Home/components/HeadCurrentDate/headcurrentdate.module.sass","Wrapper/wrapper.module.sass","App/app.module.sass","Header/components/Logo/logo.module.sass","Main/main.module.sass","Home/components/CompletedTasks/completedtasks.module.sass","Home/home.module.sass","Home/components/Time/Time.tsx","Header/components/Logo/Logo.tsx","features/utils/utils.ts","features/Auth/userSlice.ts","features/Timer/timerSlice.ts","features/Tasks/tasksSlice.ts","features/store.tsx","Header/components/Nav/Nav.tsx","Header/Header.tsx","Auth/SignIn/SignIn.tsx","Auth/SignUp/SignUp.tsx","Home/components/Limitation/components/TotalElapsedTime/TotalElapsedTime.tsx","Home/components/Limitation/Limitation.tsx","features/utils/PleaseLogIn/PleaseLogIn.tsx","Home/components/TaskTable/Diagram/Diagram.tsx","Home/components/TaskTable/TaskTable.tsx","Home/components/CompletedTasks/TasksTable/TasksTable.tsx","Home/components/CompletedTasks/CompletedTasks.tsx","Home/components/Payment/Payment.tsx","Home/components/Options/Options.tsx","Error/Error.tsx","Home/components/TimerItem/TimerItem.tsx","Home/components/Divider/Divider.tsx","Home/components/HeadCurrentDate/HeadCurrentDate.tsx","Home/Home.tsx","Main/Main.tsx","Wrapper/Wrapper.tsx","App/App.tsx","index.tsx","Home/components/CompletedTasks/TasksTable/taskstable.module.sass","Auth/SignIn/signin.module.sass","Home/components/Limitation/limitation.module.sass","Auth/SignUp/signup.module.sass","Header/header.module.sass","Home/components/Options/options.module.sass"],"names":["module","exports","Time","clock_wrapper","classes","clock","className","Logo","logo","to","transformTime","n","parseInt","zero","item","dotenv","config","initialState","user","status","token","color","JSON","parse","localStorage","getItem","message","payment","createAsyncThunk","data","a","console","log","registration","newDate","Date","date","getFullYear","toString","getMonth","getDate","createHmac","password","update","digest","role","axios","post","then","response","login","verifyToken","headers","userSlice","createSlice","name","reducers","userRemove","state","action","payload","tokenRemove","setColor","setItem","String","extraReducers","builder","addCase","pending","fulfilled","rejected","undefined","actions","saveTaskPackage","updateTime","put","timerSlice","package","task","timeLimit","setTimeLimit","removeTimeLimit","getTasks","id","get","getCompletedTasksForDays","removeTask","delete","showMatches","tasksSlice","tasks","allCompletedTasks","removeTasksFromState","store","configureStore","reducer","userReducer","timer","useAppSelector","useSelector","useAppDispatch","useDispatch","Nav","dispatch","nav","link","onClick","clear","Header","header","bgcb","bgca","SignIn","useState","inputType","setInputType","useForm","register","handleSubmit","history","useHistory","wrapper","signin","messageFromServer","input__wrapper","input__wrapper_submit","useEffect","push","onSubmit","type","required","icon","faEyeSlash","faEye","value","SignUp","signup","setTimeout","TotalElapsedTime","hour","minutes","seconds","danger","lite","Number","Limitation","start","hasTimeFrameChanged","setHasTimeFrameChanged","input_timeLimit","wrapper_input_timeLimit","white__theme_option_wrapper","black__theme_option_wrapper","expdep","forEach","hours","min","max","defaultValue","onChange","e","target","PleaseLogIn","white__theme_wrapper","black__theme_wrapper","firstname","Diagram","TaskTable","TasksTable","setUpdate","task__item","time","memo","createdAt","remove","total__time","task__wrapper","length","map","h","m","s","CompletedTasks","date__picker_start","date__picker_end","date__display","display__button","change_date","input_for_iterating_over_letters","black__theme_root","white__theme_root","dummy","wrapper_input_for_iterating_over_letters","select__other__dates_button","startDate","setStartDate","rawEndDate","setRawEndDate","convertedStartDate","setConvertedStartDate","convertedEndDate","setConvertedEndDate","getStartDate","setGetStartDate","getEndDate","setGetEndDate","startDateDisplay","setStartDateDisplay","endDateDisplay","setEndDateDisplay","displayData","setDisplayData","dateFormat","selectsStart","placeholderText","endDate","selectsEnd","Payment","black__theme_payment","white__theme_payment","stripe","useStripe","elements","useElements","handleChange","event","preventDefault","options","hidePostalCode","style","base","fontSize","invalid","disabled","Options","white__theme_options_wrapper","location","useLocation","transition","useTransition","from","opacity","enter","leave","position","props","div","width","path","Error","click","error","difficult","TimerItem","propStyle","timeName","timeType","white__theme_txt","black__theme_txt","Divider","HeadCurrentDate","mydate","moment","format","weekDayName","day","month","Home","setStart","noMemo","setNoMemo","saveData","setSaveData","setClick","setSeconds","setMinutes","setHours","useRef","timeStamp","root","timer_wrapper","timer_hours","timer_minutes","timer_seconds","divider","timer_button","timer_icons_pause","timer_icons_play","form_wrapper","inputMemo","dificultCase","minute","second","tick","current","clearInterval","setInterval","timeFrameControl","handlePlay","handlePause","stringify","filter","usid","taskId","faPause","faPlay","ref","Main","main","Wrapper","children","white_wrapper","black_wrapper","App","black__theme","white__theme","Object","keys","removeItem","stripePromise","loadStripe","process","PUBLISHABLE_KEY","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb1bb78b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock_wrapper\":\"time_clock_wrapper__1rIzI\",\"clock\":\"time_clock__1ZQpD\",\"grdAiguille\":\"time_grdAiguille__n1atW\",\"ptAiguille\":\"time_ptAiguille__1fjtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"nav_link__2SEjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white__theme_wrapper\":\"pleaselogin_white__theme_wrapper__3u2Rt\",\"black__theme_wrapper\":\"pleaselogin_black__theme_wrapper__14Hre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black__theme_payment\":\"payment_black__theme_payment__2iDVS\",\"white__theme_payment\":\"payment_white__theme_payment__1qzYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error_error__1xYJ1\",\"difficult\":\"error_difficult__1AzTY\",\"difficultCase\":\"error_difficultCase__101wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white__theme_txt\":\"timeritem_white__theme_txt__2snKZ\",\"black__theme_txt\":\"timeritem_black__theme_txt__1e-wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white__theme_txt\":\"headcurrentdate_white__theme_txt__12ltv\",\"black__theme_txt\":\"headcurrentdate_black__theme_txt__2iWMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white_wrapper\":\"wrapper_white_wrapper__1D9mN\",\"black_wrapper\":\"wrapper_black_wrapper__3EU9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black__theme\":\"app_black__theme__2u5wr\",\"white__theme\":\"app_white__theme__2cdY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__nskRl\",\"icon\":\"logo_icon__F4qOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2W8_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"completedtasks_wrapper__3HpsA\",\"input__wrapper\":\"completedtasks_input__wrapper__2ZH5R\",\"date__picker_start\":\"completedtasks_date__picker_start__zyiCj\",\"date__picker_end\":\"completedtasks_date__picker_end__3vY-A\",\"change_date\":\"completedtasks_change_date__3CwBn\",\"date__display\":\"completedtasks_date__display__26wh8\",\"display__button\":\"completedtasks_display__button__2eDoc\",\"black__theme_root\":\"completedtasks_black__theme_root__3oQjK\",\"white__theme_root\":\"completedtasks_white__theme_root__27jGI\",\"select__other__dates_button\":\"completedtasks_select__other__dates_button__1BjHP\",\"dummy\":\"completedtasks_dummy__2wSR7\",\"input_for_iterating_over_letters\":\"completedtasks_input_for_iterating_over_letters__3bICs\",\"wrapper_input_for_iterating_over_letters\":\"completedtasks_wrapper_input_for_iterating_over_letters__2NuJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"home_root__2-wxN\",\"timer_wrapper\":\"home_timer_wrapper__xWEhU\",\"timer_hours\":\"home_timer_hours__1WHXE\",\"timer_minutes\":\"home_timer_minutes__1EUp-\",\"timer_seconds\":\"home_timer_seconds__3Q-4d\",\"divider\":\"home_divider__3k0KU\",\"timer_button\":\"home_timer_button__fzewo\",\"timer_icons_pause\":\"home_timer_icons_pause__3wL9V\",\"timer_icons_play\":\"home_timer_icons_play__2ICEU\",\"form_wrapper\":\"home_form_wrapper__36B2r\",\"inputMemo\":\"home_inputMemo__2qnzG\",\"dificultCase\":\"home_dificultCase__2ul64\",\"dif\":\"home_dif__Hz7l7\"};","import { FC } from 'react';\nimport classes from './time.module.sass';\nimport { IClasses } from '../../../features/interfaces/interface';\n\nconst Time: FC = () => {\n\n    const {clock_wrapper, clock}: IClasses = classes\n    \n    return (\n        <div className={clock_wrapper}>\n            <div className={clock}>\n            </div>\n        </div>\n    );\n};\n\nexport default Time;","import { FC } from 'react';\nimport classes from './logo.module.sass';\nimport { Link } from \"react-router-dom\";\nimport Timer from '../../../Home/components/Time/Time';\nimport { IClasses } from '../../../features/interfaces/interface';\n\nconst Logo: FC = () => {\n\n    const { logo }: IClasses = classes;\n\n    return (\n        <>\n            <Link to='/' className={logo}>\n                <Timer />\n            </Link>\n        </>\n    );\n};\n\nexport default Logo;","\n\n\nexport const transformTime = (n: any): any => {\n    if(!n) return n\n    if (parseInt(n) < 10) return '0' + n;\n    return n\n}\n\nexport const zero = (item: any): any => {\n    if(!item) return item\n    if (parseInt(item) < 10) return '0' + item\n    return item\n};\n\n","import dotenv from 'dotenv';\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { transformTime } from '../utils/utils';\nimport axios, { AxiosResponse, AxiosTransformer } from 'axios';\nimport { createHmac } from 'crypto';\nimport { IRegistration } from '../interfaces/interface';\n\ndotenv.config();\n\ninterface IUser {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  email?: string;\n  role?: string;\n  exp?: number;\n  iat?: number;\n}\n\ninterface IUserState {\n  user: IUser,\n  status: string,\n  token: string,\n  color: boolean,\n  message: boolean,\n}\n\nconst initialState: IUserState = {\n  user: {},\n  status: '',\n  token: '',\n  color: JSON.parse(localStorage.getItem('color') as string),\n  message: false,\n}\n\nexport const payment = createAsyncThunk(\n  'user/payment',\n  async (data: any) => {\n    console.log(data);\n    try {\n      // return await axios.post<any>(`${process.env.SHOST || ''}/api/payment/create-payment-intent`, data)\n      //   .then((response: AxiosResponse) => response.data)\n      //   .then((data: { message: string }) => data.message)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n)\n\nexport const registration = createAsyncThunk(\n  'user/registration',\n  async (data: IRegistration) => {\n    let newDate = new Date();\n    data.date = `${transformTime(newDate.getFullYear().toString())}-${transformTime(newDate.getMonth().toString())}-${transformTime(newDate.getDate().toString())}`\n    data.password = await createHmac('sha256', data.password).update('pass').digest('hex');\n    data.role = 'user';\n    try {\n      return await axios.post<string>(`http://0.0.0.0:9001/api/auth/registration`, data)\n        .then((response: AxiosResponse) => response.data)\n        .then((data: { message: string }) => data.message)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\ninterface IDataLogin extends AxiosTransformer {\n  data: string,\n}\n\ninterface ILogin {\n  email: string;\n  password: string;\n}\n\nexport const login = createAsyncThunk(\n  'user/login',\n  async (data: ILogin) => {\n    data.password = await createHmac('sha256', data.password).update('pass').digest('hex');\n    try {\n      return await axios.post<string>(`http://0.0.0.0:9001/api/auth/login`, data)\n        .then((response: AxiosResponse) => response.data)\n        .then((data: IDataLogin) => {\n          if (!data) return\n          return data\n        });\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\n\ninterface IDataVerfigyToken extends AxiosTransformer {\n  data: IUser,\n}\nexport const verifyToken = createAsyncThunk(\n  'user/verifyToken',\n  async (data: string | null) => {\n    try {\n      return await axios.post<IUser>(`http://0.0.0.0:9001/api/auth/verifytoken`, data, {\n        headers: {\n          'Authorization': `Bearer ${data}`\n        }\n      })\n        .then((response: AxiosResponse) => response.data)\n        .then((data: IDataVerfigyToken) => {\n          return data\n        })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    userRemove(state, action) {\n      state.user = action.payload;\n    },\n    tokenRemove(state, action) {\n      state.token = action.payload;\n    },\n    setColor(state, action) {\n      state.color = action.payload;\n      localStorage.setItem('color', String(action.payload));\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(registration.pending, (state) => { state.status = 'loading'; })\n      .addCase(registration.fulfilled, (state, { payload }) => {\n        state.status = 'resolved';\n        state.status = String(payload);\n      })\n      .addCase(registration.rejected, () => { });\n    ///////\n    builder\n      .addCase(login.pending, (state) => { state.status = 'loading'; })\n      .addCase(login.fulfilled, (state, action: PayloadAction<any>) => {\n\n        state.status = 'resolved';\n        if (action.payload === undefined) state.message = true;\n        if (action.payload !== undefined) state.message = false;\n        if (typeof action.payload === 'object') {\n          state.status = action.payload.message\n        }\n        if (typeof action.payload === 'string') {\n          state.token = String(action.payload);\n        }\n\n\n        if (typeof action.payload === 'string') localStorage.setItem('token', String(action.payload));\n      })\n      .addCase(login.rejected, () => { });\n    /////\n    builder\n      .addCase(verifyToken.pending, (state) => { state.status = 'loading'; })\n      .addCase(verifyToken.fulfilled, (state, { payload }) => {\n        state.status = 'resolved';\n        state.user = payload as IUser;\n      })\n      .addCase(verifyToken.rejected, () => { });\n    ////\n    builder\n      .addCase(payment.pending, (state) => { state.status = 'loading'; })\n      .addCase(payment.fulfilled, () => {\n        // state.status = 'resolved';\n        // state.user = payload as IUser;\n      })\n      .addCase(payment.rejected, () => { });\n  },\n}); \n\nexport const { userRemove, tokenRemove, setColor } = userSlice.actions;\n\n\n\n\n\nexport default userSlice.reducer;\n","import dotenv from 'dotenv';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios, { AxiosResponse } from 'axios';\nimport { transformTime } from '../utils/utils';\ndotenv.config();\n\ninterface ITimerSlice {\n  package: [],\n  task: [],\n  timeLimit: number,\n  status: string,\n}\n\nconst initialState: ITimerSlice = {\n  package: [],\n  task: [],\n  timeLimit: 0,\n  status: '',\n}\ninterface ISaveTaskPackage {\n  date?: string,\n  id: number | undefined,\n  timeStamp: {\n    hours: number,\n    minutes: number,\n    seconds: number,\n    memo: string,\n  }\n}\ntype IUpdateTime = {\n  date?: string,\n  hours: string,\n  memo: string,\n  minutes: string,\n  seconds: string,\n  taskId: number,\n  usid: number | undefined,\n}\nexport const saveTaskPackage = createAsyncThunk(\n  'user/saveTaskPackage',\n  async (data: ISaveTaskPackage) => {\n    let newDate: Date = new Date();\n    data.date = `${transformTime(newDate.getFullYear().toString())}-${transformTime((newDate.getMonth() + 1).toString())}-${transformTime(newDate.getDate().toString())}`\n    try {\n      return await axios.post(`http://0.0.0.0:9001/api/timer/add_task`, data)\n        .then((response: AxiosResponse) => response.data)\n        .then((data: {message: string}) => data.message)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\nexport const updateTime = createAsyncThunk(\n  'user/updateTime',\n  async (data: IUpdateTime) => {\n    try {\n      let newDate: Date = new Date();\n      data.date = `${transformTime(newDate.getFullYear().toString())}-${transformTime((newDate.getMonth() + 1).toString())}-${transformTime(newDate.getDate().toString())}`\n      return await axios.put(`http://0.0.0.0:9001/api/timer/update_time`, data)\n        .then((response: AxiosResponse) => response.data)\n        .then((data: {message: string}) => data.message)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\nconst timerSlice = createSlice({\n  name: 'package',\n  initialState,\n  reducers: {\n    setTimeLimit(state, { payload }) {\n      console.log(payload)\n      state.timeLimit = payload as number;\n    },\n    removeTimeLimit(state, { payload }) {\n      state.timeLimit = payload as number;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveTaskPackage.pending, (state) => { state.status = 'loading'; })\n      .addCase(saveTaskPackage.fulfilled, (state, { payload }) => {\n        state.status = payload as string ;\n      })\n      .addCase(saveTaskPackage.rejected, () => { });\n    /////\n    builder\n      .addCase(updateTime.pending, (state) => { state.status = 'loading'; })\n      .addCase(updateTime.fulfilled, (state, {payload}) => {\n        state.status = payload as string;\n      })\n      .addCase(updateTime.rejected, () => { });\n  },\n});\n\nexport const { setTimeLimit, removeTimeLimit } = timerSlice.actions;\n\nexport default timerSlice.reducer;\n","import dotenv from 'dotenv';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios, { AxiosResponse, AxiosInstance } from 'axios';\ndotenv.config();\n\n\ninterface ITodayTasks {\n  firstname?: string,\n  memo?: string,\n  userId?: number,\n  id?: number,\n  hours?: string,\n  minutes?: string,\n  seconds?: string,\n}\ninterface ITaskSlice {\n  tasks: [],\n  allCompletedTasks: [],\n  status: string,\n}\n\nconst initialState: ITaskSlice = {\n  tasks: [],\n  allCompletedTasks: [],\n  status: 'loading',\n}\n\n\nexport const getTasks = createAsyncThunk(\n  'tasks/getTasks',\n  async (id: number | undefined) => {\n    if (typeof id === 'undefined') return\n    try {\n      return await axios.get<ITodayTasks>(`http://0.0.0.0:9001/api/tasks/get_tasks/${id}`)\n        .then((response: any) => response.data)\n        .then((data: ITodayTasks) => data)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\ninterface IGetCompletedTasksForDays {\n  convertedStartDate: string,\n  convertedEndDate: string,\n  id: number | undefined,\n}\nexport const getCompletedTasksForDays = createAsyncThunk(\n  'tasks/getCompletedTasksForDays',\n  async (data: IGetCompletedTasksForDays) => {\n    try {\n      return await axios.post<IGetCompletedTasksForDays>(`http://0.0.0.0:9001/api/tasks/get_completed_tasks`, data)\n        .then((response: AxiosResponse) => response.data)\n        .then((data: IGetCompletedTasksForDays[]) => {\n          return data\n        })\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\ninterface IDataRemove {\n  id: number\n}\nexport const removeTask = createAsyncThunk(\n  'tasks/removeTask',\n  async (data: IDataRemove | undefined) => {\n    try {\n      if(typeof data === 'undefined') return\n\n      return await axios.delete<any>(`http://0.0.0.0:9001/api/tasks/remove_task`, { data })\n        .then((response: AxiosResponse) => response.data)\n        .then((data: {message: string}) => data.message)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\ninterface IDataShowMessageFromClient {\n  data?: string,\n  convertedStartDate?: string,\n  convertedEndDate?: string,\n  id?: number | undefined,\n}\ninterface IDataShowMessageFromDB {\n  createdAt: string,\n  hours: string,\n  id: number,\n  memo: string,\n  minutes: string,\n  picture: [],\n  seconds: string,\n  userId: number,\n}\nexport const showMatches = createAsyncThunk(\n  'tasks/showMatches',\n  async (data: IDataShowMessageFromClient) => {\n    try {\n      return await axios.post<AxiosInstance>(`http://0.0.0.0:9001/api/tasks/show_matches`, { data })\n        .then((response: AxiosResponse) => response.data)\n        .then((data: IDataShowMessageFromDB[]) => data)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n);\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    removeTasksFromState(state, action) {\n      state.tasks = action.payload;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTasks.pending, (state) => { state.status = 'loading'; })\n      .addCase(getTasks.fulfilled, (state, { payload }) => {\n        if(typeof payload === \"undefined\") return\n        state.status = 'resolved';\n        state.tasks = payload as [];\n\n      })\n      .addCase(getTasks.rejected, () => { });\n    ///\n    builder\n      .addCase(getCompletedTasksForDays.pending, (state) => { state.status = 'loading'; })\n      .addCase(getCompletedTasksForDays.fulfilled, (state, { payload }) => {\n        state.status = 'resolved';\n        state.allCompletedTasks = payload as [];\n      })\n      .addCase(getCompletedTasksForDays.rejected, () => { });\n    /////\n    builder\n      .addCase(removeTask.pending, (state) => { state.status = 'loading'; })\n      .addCase(removeTask.fulfilled, (state, { payload }) => {\n        state.status = payload as string ;\n      })\n      .addCase(removeTask.rejected, () => { })\n    ///\n    builder\n      .addCase(showMatches.pending, (state) => { state.status = 'loading'; })\n      .addCase(showMatches.fulfilled, (state, { payload }) => {\n        state.status = 'resolved';\n        state.allCompletedTasks = payload as [];\n      })\n      .addCase(showMatches.rejected, () => { });\n    /////\n  },\n});\n\nexport const { removeTasksFromState } = tasksSlice.actions;\n\n\n\n\n\nexport default tasksSlice.reducer;\n\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux'\nimport userReducer from './Auth/userSlice';\nimport timerSlice from './Timer/timerSlice';\nimport tasksSlice from './Tasks/tasksSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    timer: timerSlice,\n    tasks: tasksSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;","import { FC } from 'react';\nimport classes from './nav.module.sass';\nimport { Link } from \"react-router-dom\";\nimport { userRemove, tokenRemove } from '../../../features/Auth/userSlice'\nimport { removeTimeLimit } from '../../../features/Timer/timerSlice'\nimport { removeTasksFromState } from '../../../features/Tasks/tasksSlice';\nimport { RootState } from '../../../features/store';\nimport { useAppSelector, useAppDispatch } from '../../../features/store';\nimport {IClasses} from '../../../features/interfaces/interface';\n\nconst Nav: FC = () => {\n\n    const dispatch = useAppDispatch();\n    const user = useAppSelector((state: RootState) => state.user.user);\n    \n    const {\n        nav,\n        link,\n    }: IClasses = classes;\n\n    const clean = (): void => {\n        if (!localStorage.getItem('token')) return\n        dispatch(userRemove({}));\n        dispatch(tokenRemove(''));\n        dispatch(removeTimeLimit(0));\n        localStorage.clear();\n        dispatch(removeTasksFromState([]));\n    }\n    const clearLocalStorage = (): void => {\n        /**\n         * Помогает избежать ошибку при которой переход по ссылке Sign In \n         * невозможен из-за наличия токена в localStorage\n         */\n         localStorage.clear();\n    }\n  \n    return (\n        <nav className={nav}>\n            {( user?.role === 'user' || user?.role === 'admin') ?\n                <>\n                    <Link to='/' className={link}\n                        onClick={(): void => {\n                            clean()\n                        }}\n                    >Sign Out</Link>\n                    <Link to='/payment' className={link}\n                        \n                    >Payment</Link>\n                </>\n                :\n                <>\n                    <Link to='/signin'\n                        onClick={(): void => clearLocalStorage()} \n                        className={link}>Sign In</Link>\n                    <Link to='/signup' className={link} >Sign Up</Link>\n                </>\n            }\n        </nav>\n    );\n};\n\nexport default Nav;","import { FC } from 'react';\nimport classes from './header.module.sass';\nimport Logo from './components/Logo/Logo'\nimport Nav from './components/Nav/Nav';\nimport { IClasses } from '../features/interfaces/interface';\nimport { RootState, useAppDispatch, useAppSelector } from '../features/store';\nimport { setColor } from '../features/Auth/userSlice';\n\nconst Header: FC = () => {\n    const { header, bgcb, bgca }: IClasses = classes;\n    const dispatch = useAppDispatch();\n    const color = useAppSelector((state: RootState) => state.user.color);\n    const handlerClick = (): void => {\n        dispatch(setColor(!color))\n\n    }\n\n    return (\n        <header className={header}>\n            <Logo />\n            <Nav />\n            <button className={color ? bgcb : bgca}\n                onClick={() => {\n                    handlerClick()\n                }}\n            ></button>\n        </header>\n    );\n};\nexport default Header;","import { useEffect, FC, useState } from 'react';\nimport classes from './signin.module.sass';\nimport { useForm } from \"react-hook-form\";\nimport { useAppDispatch, useAppSelector, RootState } from '../../features/store';\nimport { login, verifyToken } from '../../features/Auth/userSlice';\nimport { useHistory } from 'react-router';\nimport { IClasses } from '../../features/interfaces/interface';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst SignIn: FC = () => {\n\n    interface ILogin {\n        email: string;\n        password: string;\n    }\n    const [inputType, setInputType] = useState<string>('password');\n    const dispatch = useAppDispatch();\n    const { register, handleSubmit } = useForm();\n    const token = useAppSelector((state: RootState) => state.user.token);\n    const status = useAppSelector((state: RootState) => state.user.status);\n    const history = useHistory();\n    const {\n        wrapper,\n        signin,\n        password,\n        messageFromServer,\n        input__wrapper,\n        input__wrapper_submit,\n    }: IClasses = classes;\n\n    const onSubmit = (data: ILogin | any): void => {\n        dispatch(login(data));\n    };\n    useEffect(() => {\n        if (!localStorage.getItem('token')) return;\n        dispatch(verifyToken(localStorage.getItem('token')));\n        history.push('/');\n    }, [dispatch, token, history]);\n\n    const handleChangeInputTypeOnText = (): void => {\n        setInputType('text');\n    }\n    const handleChangeInputTypeOnPassword = (): void => {\n        setInputType('password');\n    }\n\n    return (\n        <section className={wrapper}>\n            <h2>Sign In</h2>\n            <form onSubmit={handleSubmit(onSubmit)} className={signin}>\n                <section className={input__wrapper}>\n                    <label>Email: </label>\n                    <input type='text' {...register(\"email\", { required: true })} />\n                </section>\n\n                <section className={input__wrapper}>\n                    <label >Password: </label>\n                    <input type={inputType} {...register(\"password\", { required: true })} />\n                </section>\n                <div className={password}>\n                    {(inputType === 'password') ?\n                        <FontAwesomeIcon icon={faEyeSlash as IconProp} onClick={() => {\n                            handleChangeInputTypeOnText();\n                        }} />\n                        :\n                        <FontAwesomeIcon icon={faEye as IconProp} onClick={() => {\n                            handleChangeInputTypeOnPassword();\n                        }} />\n                    }\n                </div>\n                <div className={messageFromServer}>{(status && (status !== 'resolved')) && <label>{status}</label>}</div>\n                <section className={input__wrapper_submit}>\n                    <input type='submit' value='Sign In' />\n                </section>\n            </form>\n        </section>\n    );\n};\n\nexport default SignIn;","import { FC } from 'react';\nimport classes from './signup.module.sass';\nimport { useForm } from \"react-hook-form\";\nimport { useAppDispatch } from '../../features/store';\nimport { registration } from '../../features/Auth/userSlice';\nimport { useHistory } from 'react-router-dom';\nimport { IRegistration } from '../../features/interfaces/interface';\nimport { IClasses } from '../../features/interfaces/interface';\n\nconst SignUp: FC = () => {\n\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n    const { register, handleSubmit } = useForm();\n\n    const {\n        wrapper,\n        signup,\n        input__wrapper,\n        input__wrapper_submit,\n    }: IClasses = classes;\n\n    const onSubmit = (data: IRegistration | any): void => {\n        dispatch(registration(data));\n        setTimeout(() => {\n            history.push('/signin')\n        }, 10);\n    };\n\n    return (\n        <section className={wrapper}>\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSubmit(onSubmit)} className={signup}>\n                <section className={input__wrapper}>\n                    <label>Firstname: </label>\n                    <input type='text' {...register(\"firstname\", { required: true })} />\n                </section>\n\n                <section className={input__wrapper}>\n                    <label>Lastname: </label>\n                    <input type='text' {...register(\"lastname\", { required: true })} />\n                </section>\n\n                <section className={input__wrapper}>\n                    <label>Email: </label>\n                    <input type='text' {...register(\"email\", { required: true })} />\n                </section>\n\n                <section className={input__wrapper}>\n                    <label>Password: </label>\n                    <input type='text' {...register(\"password\", { required: true })} />\n                </section>\n                <section className={input__wrapper_submit}>\n                    <input type='submit' />\n                </section>\n\n            </form>\n        </section>\n\n    );\n};\n\nexport default SignUp;","import { FC } from 'react';\nimport {zero} from '../../../../../features/utils/utils';\n\n\ntype ITotalElapsedTimeProps = {\n    hour: number,\n    minutes: number,\n    seconds: number,\n    danger: string,\n    lite: string,\n}\n\nconst TotalElapsedTime: FC<ITotalElapsedTimeProps> = ({hour, minutes, seconds, danger, lite}) => {\n    return (\n        <div>\n            <p>Total elapsed time</p>\n            <span className={Number(localStorage.getItem('hour')) >= Number(localStorage.getItem('timeLimit')) ? danger : lite}>\n                {zero(String(hour))}:{zero(String(minutes))}:{zero(String(seconds))}\n            </span>\n            {(Number(localStorage.getItem('hour')) >= Number(localStorage.getItem('timeLimit'))) ? <span> You have exceeded the time limit</span> : null}\n        </div>\n    );\n};\n\nexport default TotalElapsedTime;","import { FC, useEffect, useState } from 'react';\nimport classes from './limitation.module.sass';\nimport { useAppSelector, useAppDispatch } from '../../../features/store';\nimport { RootState } from '../../../features/store';\nimport { setTimeLimit } from '../../../features/Timer/timerSlice';\nimport { IClasses } from '../../../features/interfaces/interface';\nimport TotalElapsedTime from './components/TotalElapsedTime/TotalElapsedTime';\n\ntype ILimitationProps = {\n    start: boolean,\n}\n\ntype ITask = {\n    firstname: string,\n    createdAt: string,\n    hours: string,\n    id: number,\n    memo: string,\n    minutes: string,\n    seconds: string,\n    userId: number,\n}\n\nconst Limitation: FC<ILimitationProps> = ({ start }) => {\n\n    const dispatch = useAppDispatch();\n    const color = useAppSelector((state: RootState) => state.user.color);\n    const tasks = useAppSelector((state: RootState) => state.tasks.tasks);\n    const [hasTimeFrameChanged, setHasTimeFrameChanged] = useState<boolean>(false);\n    const { danger,\n        lite,\n        input_timeLimit,\n        wrapper_input_timeLimit,\n        white__theme_option_wrapper,\n        black__theme_option_wrapper }: IClasses = classes;\n    let hour: number = 0,\n        minutes: number = 0,\n        seconds: number = 0;\n\n\n    let countTotalTime = (item: ITask[]) => {\n        if (!item) return\n        item.forEach((task: ITask) => {\n            hour += Number(task.hours);\n            minutes += Number(task.minutes);\n            seconds += Number(task.seconds);\n            while (seconds > 60) {\n                minutes++;\n                seconds -= 60;\n            }\n            while (minutes >= 60) {\n                hour++;\n                minutes -= 60;\n            }\n\n        })\n        localStorage.setItem('hour', String(hour));\n    }\n    /**React Hook useEffect has a complex expression in the dependency array.\n     * Extract it to a separate variable so it can be statically checked  \n     * react-hooks/exhaustive-deps \n     */\n    let timeLimit: string | number = localStorage.getItem('timeLimit') || 0;\n    let expdep: boolean = !start;\n\n    useEffect(() => {\n\n    }, [expdep, start, hour, timeLimit]);\n    countTotalTime(tasks);\n\n    return (\n        <div className={color ? white__theme_option_wrapper : black__theme_option_wrapper}>\n            <section>\n                <h2>Set a time limit?</h2>\n                <p>Set the time limit for which you want to complete the task</p>\n                <p>\n                    Upon expiration of the time limit, you will be asked whether to continue\n                    or stop the task execution timer\n                </p>\n                <div className={wrapper_input_timeLimit}>\n                    <input type='number'\n                        min='1' max='24'\n                        className={(input_timeLimit)}\n                        defaultValue={Number(localStorage.getItem('timeLimit')) || 3}\n                        onChange={(e) => {\n                            setHasTimeFrameChanged(!hasTimeFrameChanged);\n                            dispatch(setTimeLimit(String(e.target.value)));\n                            localStorage.setItem('timeLimit', String(e.target.value))\n\n                        }} />\n                    <span>Enter time limit</span>\n                </div>\n\n                <div>\n                    <h3>This feature is under development.</h3>\n                </div>\n                <TotalElapsedTime hour={hour} minutes={minutes} seconds={seconds} danger={danger} lite={lite} />\n\n            </section>\n\n        </div>\n    );\n};\n\nexport default Limitation;","import { FC } from 'react';\nimport classes from './pleaselogin.module.sass';\nimport { useAppSelector, RootState } from '../../store';\n\nconst PleaseLogIn: FC = () => {\n    const user = useAppSelector((state: RootState) => state.user.user);\n    const color = useAppSelector((state: RootState) => state.user.color);\n    const { white__theme_wrapper, black__theme_wrapper } = classes\n\n\n    return (\n        <h3 className={color ? white__theme_wrapper : black__theme_wrapper}>\n            Hello {user ? user.firstname : 'guest! Please log in'}\n        </h3>\n    );\n};\n\nexport default PleaseLogIn;","import { useState, useEffect, FC } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { zero } from \"../../../../features/utils/utils\";\nimport { useAppSelector } from \"../../../../features/store\";\nimport { RootState } from \"../../../../features/store\";\n\ninterface ITasks {\n  firstname: string;\n  memo: string;\n  userId: number;\n  id: number;\n  createdAt: string;\n  hours: string;\n  minutes: string;\n  seconds: string;\n}\ntype IArr = [ITasks] | [];\ntype IDiagramProps = {\n  tasks: IArr;\n  start: boolean;\n};\n\ntype IChartData = {\n  labels?: string[];\n  datasets?: [\n    {\n      label: string;\n      data: string[];\n      backgroundColor: string[];\n    }\n  ];\n};\n\nconst Diagram: FC<IDiagramProps | any> = ({ tasks, start }) => {\n  const [chartData, setChartData] = useState<IChartData | any>({});\n  let [timer, setTimer] = useState<string[] | any>([]);\n  const user = useAppSelector((state: RootState) => state.user.user);\n\n\n\n  return (\n    <div>\n    \n    </div>\n  );\n};\nexport default Diagram;\n","import { useEffect, FC } from 'react';\nimport { getTasks } from '../../../features/Tasks/tasksSlice';\nimport PleaseLogIn from '../../../features/utils/PleaseLogIn/PleaseLogIn';\nimport Diagram from './Diagram/Diagram';\nimport {useAppDispatch, useAppSelector} from '../../../features/store';\nimport { RootState } from '../../../features/store';\n\n\n\ntype IStartProps = {\n    start: boolean,\n}\ntype ITasks = {\n    firstname: string,\n    memo: string,\n    userId: number,\n    id: number,\n    createdAt: string,\n    hours: string,\n    minutes: string,\n    seconds: string,\n}\n\nconst TaskTable: FC<IStartProps> = ({ start }) => {\n\n    const dispatch = useAppDispatch();\n    const user = useAppSelector((state: RootState) => state.user.user);\n    const tasks: ITasks | undefined | [] | any = useAppSelector((state: RootState) => state.tasks.tasks);\n    \n    useEffect(() => {\n        dispatch(getTasks(user?.id))\n    }, [dispatch, start, user])\n\n    return (\n        <div>\n            <PleaseLogIn />\n            <Diagram tasks={tasks} start={start} />\n        </div>\n    );\n};\n\nexport default TaskTable;","import { useEffect, FC } from 'react';\nimport { zero } from '../../../../features/utils/utils'\nimport classes from './taskstable.module.sass';\nimport { useAppDispatch } from '../../../../features/store';\nimport { removeTask } from '../../../../features/Tasks/tasksSlice';\nimport { IClasses } from '../../../../features/interfaces/interface';\n\ntype ITasks = {\n    id: number,\n    hours: string,\n    minutes: string,\n    seconds: string,\n    memo: string,\n    userId: number,\n    picture: [],\n    createdAt: string,\n}\n\ntype ITasksProps = {\n    allCompletedTasks: ITasks[]\n    setUpdate: any,\n    update: boolean,\n}\n\n\nconst TasksTable: FC<ITasksProps> = ({ allCompletedTasks, setUpdate, update }) => {\n\n    const {\n        wrapper,\n        task__item,\n        time,\n        memo,\n        createdAt,\n        remove,\n        header,\n        total__time,\n        task__wrapper,\n    }: IClasses = classes;\n\n    const dispatch = useAppDispatch();\n\n    let hour: number = 0,\n        minutes: number = 0,\n        seconds: number = 0;\n\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allCompletedTasks, hour, minutes, seconds]);\n\n    let getTime = (h: number, m: number, s: number): string => {\n        return (\n            `${zero(String(h))}:${zero(String(m))}:${zero(String(s))}`\n        )\n    }\n    let countTotalTime = (item: ITasks[]): void => {\n        if (!item || item.length === 0) return\n        item.forEach((task: ITasks) => {\n            hour += Number(task.hours);\n            minutes += Number(task.minutes);\n            seconds += Number(task.seconds);\n            while (seconds > 60) {\n                minutes++;\n                seconds -= 60;\n            }\n            while (minutes >= 60) {\n                hour++;\n                minutes -= 60\n            }\n        });\n    }\n\n    countTotalTime(allCompletedTasks);\n\n    useEffect(() => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allCompletedTasks]);\n    return (\n        <div className={wrapper}>\n            <div className={header}>\n                <div>Tasks</div>\n                <div>Time</div>\n                <div>CreatedAt</div>\n            </div>\n            <div className={task__wrapper}>\n                {(allCompletedTasks.length > 0) && allCompletedTasks.map((task: ITasks) => {\n                    return (\n                        <div className={task__item} key={task.id}>\n                            <div className={memo}>{task.memo}\n                                <button className={remove}\n                                    onClick={(): void => {\n                                        dispatch(removeTask({ id: task.id }))\n                                        setUpdate(!update)\n                                    }}\n                                >x</button>\n                            </div>\n                            <div className={time}>{getTime(Number(task.hours), Number(task.minutes), Number(task.seconds))}</div>\n                            <span className={createdAt}>{task.createdAt}</span>\n                        </div>\n                    )\n                })}\n            </div>\n\n            <div className={total__time}>\n                <p>Total elapsed time:</p>\n                <span>{zero(String(hour))}:{zero(String(minutes))}:{zero(String(seconds))} </span>\n            </div>\n\n        </div>\n    );\n};\n\nexport default TasksTable;","import { FC, useEffect, useState } from 'react';\nimport PleaseLogIn from '../../../features/utils/PleaseLogIn/PleaseLogIn';\nimport { useAppSelector, useAppDispatch } from '../../../features/store';\nimport { RootState } from '../../../features/store';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { zero } from '../../../features/utils/utils';\nimport { getCompletedTasksForDays } from '../../../features/Tasks/tasksSlice';\nimport classes from './completedtasks.module.sass';\nimport TasksTable from './TasksTable/TasksTable';\nimport { showMatches } from '../../../features/Tasks/tasksSlice';\nimport { IClasses } from '../../../features/interfaces/interface';\n\nconst CompletedTasks: FC = () => {\n\n    const {\n        input__wrapper,\n        date__picker_start,\n        date__picker_end,\n        date__display,\n        display__button,\n        wrapper,\n        change_date,\n        input_for_iterating_over_letters,\n        black__theme_root,\n        white__theme_root,\n        dummy,\n        wrapper_input_for_iterating_over_letters,\n        select__other__dates_button,\n    }: IClasses = classes;\n\n    const allCompletedTasks = useAppSelector((state: RootState) => state.tasks.allCompletedTasks),\n        user = useAppSelector((state: RootState) => state.user.user),\n        color = useAppSelector((state: RootState) => state.user.color);\n    const dispatch = useAppDispatch();\n\n    const [startDate, setStartDate] = useState<Date>(new Date()),\n        [rawEndDate, setRawEndDate] = useState<Date>(new Date()),\n        [convertedStartDate, setConvertedStartDate] = useState<string>(''),\n        [convertedEndDate, setConvertedEndDate] = useState<string>(''),\n        [getStartDate, setGetStartDate] = useState<boolean>(true),\n        [getEndDate, setGetEndDate] = useState<boolean>(false),\n        [startDateDisplay, setStartDateDisplay] = useState<boolean>(false), //date\n        [endDateDisplay, setEndDateDisplay] = useState<boolean>(false),    //date\n        [displayData, setDisplayData] = useState<boolean>(false),\n        [update, setUpdate] = useState<boolean>(false);\n\n    useEffect(() => {\n        setConvertedStartDate(`${startDate.getFullYear()}-${zero(String(startDate.getMonth() + 1))}-${zero(String(startDate.getDate()))}`);\n        setConvertedEndDate(`${rawEndDate.getFullYear()}-${zero(String(rawEndDate.getMonth() + 1))}-${zero(String(rawEndDate.getDate()))}`);\n    }, [startDate, rawEndDate])\n\n    useEffect(() => {\n        dispatch(getCompletedTasksForDays({ convertedStartDate, convertedEndDate, id: user?.id }))\n    }, [update, dispatch, convertedEndDate, convertedStartDate, user?.id])\n\n    return (\n        <div className={color ? white__theme_root : black__theme_root}>\n            {!displayData && <PleaseLogIn />}\n\n            {displayData ? //если нажата кнопка Display выодим tasks\n                <>\n                    <section>\n                        <h2>Your completed tasks</h2>\n                        <div className={wrapper_input_for_iterating_over_letters}>\n                            <input type='text'\n                                className={input_for_iterating_over_letters}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) => dispatch(showMatches({ data: e.target.value, convertedStartDate, convertedEndDate, id: user?.id }))} />\n                            <span>Display a specific tasks</span>\n                        </div>\n\n                        <button className={select__other__dates_button}\n                            onClick={(): void => {\n                                setDisplayData(false); // Возврат к выбору дат\n                                setStartDateDisplay(false);\n                                setEndDateDisplay(false);\n                                setGetStartDate(true);\n                                setGetEndDate(false)\n                            }}>Select other dates</button>\n\n                    </section>\n\n                    <TasksTable allCompletedTasks={allCompletedTasks} setUpdate={setUpdate} update={update} />\n                </>\n\n\n                :\n                <section className={wrapper}>\n                    {getStartDate &&\n                        <div className={dummy}>\n                            <p>\n                                Here you can see all tasks for a specific date or for a range of dates.\n                            </p>\n                            <p>\n                                The data is displayed in a table in which it is possible to delete a specific task.\n                            </p>\n                            <p>\n                                The total time spent on tasks is displayed below.\n                            </p>\n                        </div>}\n                    {\n                        startDateDisplay ? <h2>Selected date:</h2>//Если выбрана первая дата\n                            : <h2>Select date</h2>\n                    }\n                    <div className={date__display}>\n                        {startDateDisplay && <p>{convertedStartDate}</p>}\n                        {endDateDisplay && <p>-</p>}\n                        {endDateDisplay && <p>{convertedEndDate}</p>}\n                        {startDateDisplay &&\n                            <button className={change_date}\n                                onClick={(): void => {\n                                    setStartDateDisplay(false);\n                                    setEndDateDisplay(false);\n                                    setGetStartDate(true);\n                                    setGetEndDate(false)\n                                }}    >\n                                Change dates\n                            </button>\n                        }\n                    </div>\n\n\n                    <div className={input__wrapper}>\n                        {getStartDate ?\n                            <DatePicker\n                                className={date__picker_start}\n                                onChange={(date: Date) => {\n                                    setStartDate(date);\n                                    setStartDateDisplay(true);\n                                    setGetEndDate(true);\n                                    setGetStartDate(false)\n                                }}\n                                dateFormat=\"yyyy-MM-dd\"\n                                selectsStart\n                                placeholderText=\"Start\"\n                                startDate={startDate}\n                                endDate={rawEndDate} />\n                            : null}\n\n                        {getEndDate ?\n                            <DatePicker\n                                className={date__picker_end}\n                                onChange={(date: Date) => {\n                                    setRawEndDate(date);\n                                    setEndDateDisplay(true)\n                                    setGetStartDate(false)\n                                    setGetEndDate(false)\n                                }}\n                                placeholderText=\"End\"\n                                dateFormat=\"yyyy-MM-dd\"\n                                selectsEnd\n                                startDate={startDate}\n                                endDate={rawEndDate} />\n                            : null\n                        }\n                    </div>\n                </section>\n            }\n            {(endDateDisplay && !displayData) &&\n                <button className={display__button}\n                    onClick={(): void => {\n                        setDisplayData(true)\n                        dispatch(getCompletedTasksForDays({ convertedStartDate, convertedEndDate, id: user?.id }))\n                    }}>\n                    Display\n                </button>\n            }\n        </div>\n    );\n};\n\nexport default CompletedTasks;","import { FC } from 'react';\nimport classes from './payment.module.sass';\nimport { IClasses } from '../../../features/interfaces/interface';\nimport { useAppSelector, RootState, useAppDispatch } from '../../../features/store';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { payment } from '../../../features/Auth/userSlice';\n\nconst Payment: FC = () => {\n\n    const {\n        black__theme_payment,\n        white__theme_payment,\n    }: IClasses = classes;\n    const stripe = useStripe();\n    const elements = useElements();\n    // const [succeeded, setSucceeded] = useState(false);\n    // const [error, setError] = useState(null);\n    // const [processing, setProcessing] = useState('');\n    // const [disabled, setDisabled] = useState(true);\n    // const [clientSecret, setClientSecret] = useState('');\n\n    const color = useAppSelector((state: RootState) => state.user.color);\n    const dispatch = useAppDispatch();\n\n    const checkoutFormOptions = {\n        hidePostalCode: true,\n        style: {\n            base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                    color: '#aab7c4',\n                },\n            },\n            invalid: {\n                color: '#9e2146',\n            },\n        },\n    }\n    const handleChange = async (event: any) => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        // setDisabled(event.empty);\n        // setError(event.error ? event.error.message : \"\");\n        console.log(event)\n    };\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        if (!stripe || !elements) return\n        dispatch(payment(event))\n    }\n\n\n    return (\n        <div className={color ? white__theme_payment : black__theme_payment}>\n\n\n            <form onSubmit={handleSubmit}>\n                <CardElement onChange={handleChange}\n                    options={checkoutFormOptions} id=\"card-element\" />\n                <button type=\"submit\" disabled={!stripe} id=\"submit\">\n                    Pay\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Payment;","import { FC } from 'react';\nimport Limitation from '../Limitation/Limitation';\nimport TaskTable from '../TaskTable/TaskTable';\nimport CompletedTasks from '../CompletedTasks/CompletedTasks';\nimport { Link, Switch, Route, useLocation } from 'react-router-dom';\nimport classes from './options.module.sass';\nimport { useAppSelector, RootState } from '../../../features/store';\nimport { useTransition, animated } from 'react-spring'\nimport { IClasses } from '../../../features/interfaces/interface';\nimport Payment from '../Payment/Payment';\n\n\ntype IOptionProps = {\n    start: boolean,\n}\ntype IOptionLocation = {\n    pathname?: string,\n    hash?: string,\n    key?: string,\n    search?: string,\n    state?: string,\n}\n\nconst Options: FC<IOptionProps> = ({ start }) => {\n\n    const {\n        white__theme_options_wrapper,\n        link,\n        black__theme_option_wrapper }: IClasses = classes;\n    const color = useAppSelector((state: RootState) => state.user.color);\n    const location = useLocation<IOptionLocation>();\n    const transition = useTransition(location, {\n        from: {\n            opacity: 0,\n        },\n        enter: {\n            opacity: 1,\n        },\n        leave: {\n            opacity: 0,\n        },\n    });\n\n    return (\n        <section className={color ? black__theme_option_wrapper : white__theme_options_wrapper} style={{ position: 'relative' }}>\n            <h2>Options</h2>\n            <menu>\n                <Link to='/limitations' className={link} >Time limit</Link>\n                <Link to='/tasktable' className={link} >Task table</Link>\n                <Link to='/completedtasks' className={link} >Completed tasks</Link>\n            </menu>\n\n            {\n                transition((props, item) => (\n                    <animated.div style={props}>\n                        <div style={{ position: 'absolute', width: '100%' }}>\n                            <Switch location={item}>\n                                <Route path=\"/limitations\">\n                                    <Limitation start={start} />\n                                </Route>\n                                <Route path=\"/tasktable\">\n                                    <TaskTable start={start} />\n                                </Route>\n                                <Route path=\"/completedtasks\">\n                                    <CompletedTasks />\n                                </Route>\n                                <Route path=\"/payment\">\n                                    <Payment />\n                                </Route>\n                            </Switch>\n                        </div>\n                    </animated.div>\n                ))\n            }\n        </section>\n    );\n};\n\nexport default Options;","import { FC } from 'react';\nimport classes from './error.module.sass';\nimport {IClasses} from '../features/interfaces/interface';\n\n\ntype IErrorProps = {\n    message: string,\n    click: number,\n}\n\nconst Error: FC<IErrorProps> = ({ message, click }) => {\n\n    let { error, difficult }: IClasses = classes;\n\n    return (\n        <div className={(click > 1) ? difficult : error}>\n            <span>{message}</span>\n        </div>\n    );\n};\n\nexport default Error;","import { FC } from 'react';\nimport { zero } from '../../../features/utils/utils';\nimport {useAppSelector, RootState} from '../../../features/store';\nimport classes from './timeritem.module.sass';\nimport {IClasses} from '../../../features/interfaces/interface';\n\ntype ITimerItemProps = {\n    propStyle: string,\n    timeName: string,\n    timeType: number,\n}\n\nconst TimerItem: FC<ITimerItemProps> = ({ propStyle, timeName, timeType }) => {\n    \n    const {white__theme_txt, black__theme_txt}: IClasses = classes;\n    const color = useAppSelector((state: RootState) => state.user.color);\n\n    return (\n        <section className={propStyle}>\n            <span>\n                {zero(String(timeType))}\n            </span>\n            <span className={color ? black__theme_txt : white__theme_txt}>{timeName}</span>\n        </section>\n    );\n};\n\nexport default TimerItem;","import { FC } from 'react';\n\ntype IDividerProps = {\n    propStyle: string,\n}\n\nconst Divider: FC<IDividerProps> = ({ propStyle }) => {\n\n    return (\n        <div className={propStyle}>\n            <span>:</span>\n        </div>\n    );\n};\n\nexport default Divider;","import { FC } from 'react';\nimport moment from 'moment';\nimport { transformTime } from '../../../features/utils/utils';\nimport {useAppSelector, RootState} from '../../../features/store';\nimport classes from './headcurrentdate.module.sass';\nimport {IClasses} from '../../../features/interfaces/interface';\n\nconst HeadCurrentDate: FC = () => {\n\n    const {white__theme_txt, black__theme_txt}: IClasses = classes;\n    const user = useAppSelector((state: RootState) => state.user.user);\n    const color = useAppSelector((state: RootState) => state.user.color);\n\n    let mydate: any = moment().format(),\n        weekDayName: any = moment(mydate).format('dddd'),\n        date: Date = new Date(),\n        day: string = transformTime(date.getDate().toString()),\n        month: any = moment().format('MMMM');\n\n    return (\n        <div className={color ? black__theme_txt : white__theme_txt}>\n            {user ? <h2>{weekDayName} {day}, {month}</h2> : <p>Hello</p>}\n        </div>\n    );\n};\n\nexport default HeadCurrentDate;","import { useState, useEffect, useRef, FC } from 'react';\nimport { useAppDispatch, useAppSelector } from '../features/store';\nimport { RootState } from '../features/store';\nimport classes from './home.module.sass';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPause, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { saveTaskPackage, updateTime } from '../features/Timer/timerSlice';\nimport { getTasks } from '../features/Tasks/tasksSlice';\nimport Options from './components/Options/Options';\nimport Error from '../Error/Error';\n\nimport TimerItem from './components/TimerItem/TimerItem';\nimport Divider from './components/Divider/Divider';\nimport HeadCurrentDate from './components/HeadCurrentDate/HeadCurrentDate';\n\nconst Home: FC = () => {\n\n    /************************************* */\n    type ICurrent = {\n        current: number | null | any;\n    }\n    type ITaks = {\n        firstname: string,\n        createdAt: string,\n        hours: string,\n        id: number,\n        memo: string,\n        minutes: string,\n        seconds: string,\n        userId: number,\n    }\n    type IGetTime = {\n        hours: number,\n        minutes: number,\n        seconds: number,\n    }\n    type ITimeStamp = {\n        hours: number | string,\n        minutes: number | string,\n        seconds: number | string,\n        memo: string,\n    }\n    /************************************* */\n\n    const user = useAppSelector((state: RootState) => state.user.user),\n        tasks = useAppSelector((state: RootState) => state.tasks.tasks);\n    const dispatch = useAppDispatch();\n\n    const [start, setStart] = useState<boolean>(false), // Отображение кнопки play pause\n        [noMemo, setNoMemo] = useState<boolean>(false),\n        [saveData, setSaveData] = useState<boolean>(true);\n\n    let [click, setClick] = useState<number>(0), // Сколько раз пользователь нажал плей без указания memo\n        [seconds, setSeconds] = useState<number>(0),\n        [minutes, setMinutes] = useState<number>(0),\n        [hours, setHours] = useState<number>(0);\n\n    let memo: any = useRef('');\n    let timeStamp: any = {};\n\n    const {\n        root,\n        timer_wrapper,\n        timer_hours,\n        timer_minutes,\n        timer_seconds,\n        divider,\n        timer_button,\n        timer_icons_pause,\n        timer_icons_play,\n        form_wrapper,\n        inputMemo,\n        dificultCase,\n    } = classes;\n\n    let hour: number = 0,\n        minute: number = 0,\n        second: number = 0;\n\n\n    let countTotalTime = (item: ITaks[] | []) => {\n        if (!item) return\n        item.forEach((task: ITaks) => {\n            if (Number(task.hours) === 0) return\n            hour += Number(task.hours)\n            if (Number(task.minutes) === 0) return\n            minute += Number(task.minutes)\n            if (Number(task.seconds) === 0) return\n            second += Number(task.seconds)\n            while (second > 60) {\n                minute++;\n                second -= 60;\n            }\n            while (minute >= 60) {\n                hour++;\n                minute -= 60\n            }\n        })\n        if (hour === 0) return\n        localStorage.setItem('hour', String(hour))\n    }\n    countTotalTime(tasks);\n\n    let timer: ICurrent = useRef(null);\n    let tick = (): void => {\n        //Запускает и оставнавливает счетчик\n        if (!timer.current) {\n            timer.current = setInterval(() => {\n                setSeconds((seconds: number) => +seconds + 1);\n            }, 1);\n        } else {\n            clearInterval(timer.current);\n            timer.current = null\n        }\n    }\n\n    let timeFrameControl = (seconds: number, minutes: number, hours: number) => {\n        //Ф. не дает выйти за рамки 60 секунд, минут, часов\n        if (seconds > 59) {\n            setSeconds(0)\n            setMinutes((minutes: number) => minutes + 1)\n        }\n        if (minutes > 59) {\n            setMinutes(0)\n            setHours((hours: number) => hours + 1)\n        }\n        if (hours > 59) {\n            setHours(0)\n        }\n    }\n\n    useEffect(() => {\n        timeFrameControl(seconds, minutes, hours);\n    }, [seconds, minutes, hours]);\n\n    useEffect(() => {\n        if (typeof(user?.id) === 'undefined') return\n        dispatch(getTasks(user.id));\n    }, [dispatch, user?.id, start])\n\n    let getTime = (h: number, m: number, s: number): IGetTime => {\n        //Собирает значения полей времени в обьект\n        return timeStamp = {\n            hours: h,\n            minutes: m,\n            seconds: s,\n        }\n    }\n    const resetTimer = (): void => {\n        setSeconds(0);\n        setMinutes(0);\n        setHours(0);\n    }\n\n    const handlePlay = (): void => {\n        /**\n         * Не дает включить счетчик если memo не заполнен\n         * Следит за memo в инпуте и сравнивает с мемо в локальном хранилище\n         * и если они идентичны продолжаешь считать время, если нет сбрасывает время\n         * и пишет новое memo\n         */\n        if (!user.role) return; // Если пользователь авторизован\n        //Увеличиваем клик для визуального оформления\n        setClick(++click);\n        if (memo.current.value.length === 0) setNoMemo(true);// Показываем Error что не указан memo\n        if (memo.current.value.length > 0) {\n            setNoMemo(false);\n            setClick(0);\n        }  // Убираем Error если memo указан\n        if (memo.current.value.length === 0) return  // Если memo не указан не запускаем счетчик\n        setStart(true); // Отображение кнопки pause\n        tick(); // Запускает счетчик\n\n        if (String(memo.current.value) !== String(localStorage.getItem('oldmemo'))) {\n            setSaveData(true); // Делаем true если мемо не совпадает\n            resetTimer();\n            // Если memo поменялось делаем возможным новую запись в базу\n        }\n        localStorage.setItem('memo', memo.current.value);\n    }\n\n    const handlePause = (): any => {\n        tick();\n        dispatch(getTasks(user.id))\n        setStart(false); // Отображение кнопки play\n        getTime(hours, minutes, seconds)\n        timeStamp.memo = String(memo.current.value)\n        localStorage.setItem('timeStamp', JSON.stringify(timeStamp))\n\n        //saveData по дефолту true\n        if (!saveData) { //если false обновляем запись в базе\n            let id: ITaks[] = tasks.filter((task: ITaks) => {\n                return task.memo === String(memo.current.value)\n            }) //В массиве tasks находим memo равное значению из инпута\n            if (!id) return\n            if (id[0]?.memo === localStorage.getItem('oldmemo')) {\n                /**\n                 * Если memo из фильтра равно oldmemo\n                 * парсим timeStamp из localStorage\n                 * Запоняем новыми данными обьект и отправляем для обновления\n                 */\n                let time: any = JSON.parse(localStorage.getItem('timeStamp') || '{}');\n                return dispatch(updateTime({\n                    hours: String(time.hours),\n                    minutes: String(time.minutes),\n                    seconds: String(time.seconds),\n                    memo: String(localStorage.getItem('oldmemo')),\n                    usid: Number(user.id),\n                    taskId: Number(id[0].id),\n                }));\n            } else {\n                /**\n                 * Если memo из фильтра нет, значит записи в базе о задаче нет\n                 * Делаем новую запись в базу отправляя timeStamp и id пользователя\n                 * Флаг saveData true saveTaskPackage возможен\n                 * Переводим флаг saveData в false\n                 */\n                if (user.id) {\n                    dispatch(saveTaskPackage({ timeStamp, id: user.id }))//Запись в базу новых данных только через saveData(true)\n                    setSaveData(false)\n                }\n            }\n        } else {\n            /**\n             * если saveData true делаем новую запись в базе/ saveData делаем false\n             * В массиве tasks находим memo равное значению из инпута\n             */\n            if (!tasks) return\n            let id: ITaks[] = tasks.filter((task: ITaks) => {\n                return task.memo === String(memo.current.value)\n            })\n            if (!id) return\n            if (id[0]?.memo === String(localStorage.getItem('memo'))) {\n                /**\n                 * Если memo из фильтра равно memo\n                 * парсим timeStamp из localStorage\n                 * Запоняем новыми данными обьект и отправляем для обновления\n                 */\n\n                let time: ITimeStamp = JSON.parse(localStorage.getItem('timeStamp') || '');\n                return dispatch(updateTime({\n                    hours: String(time.hours),\n                    minutes: String(time.minutes),\n                    seconds: String(time.seconds),\n                    memo: String(localStorage.getItem('memo')),\n                    usid: Number(user.id),\n                    taskId: Number(id[0].id),\n                }))\n            } else {\n                dispatch(saveTaskPackage({ timeStamp, id: user.id }))//Запись в базу новых данных только через saveData(true)\n                setSaveData(false);\n            }\n            // Отключаем запись в базу, думая что задача не поменялась следущая задача обновить ту же запись в базе\n        }\n    }\n\n    return (\n        <div className={root}>\n            <HeadCurrentDate />\n            {user &&\n                <div className={form_wrapper}>\n                    <div className={timer_wrapper}>\n                        <TimerItem propStyle={timer_hours} timeName={'Hours'} timeType={hours} />\n                        <Divider propStyle={divider} />\n\n                        <TimerItem propStyle={timer_minutes} timeName={'Minutes'} timeType={minutes} />\n                        <Divider propStyle={divider} />\n\n                        <TimerItem propStyle={timer_seconds} timeName={'Seconds'} timeType={seconds} />\n\n                        <section className={timer_button}>\n                            {!start ?\n                                <FontAwesomeIcon icon={faPlay as IconProp}\n                                    className={timer_icons_play}\n                                    onClick={(): void => {\n                                        handlePlay()\n                                    }} />\n                                :\n                                <FontAwesomeIcon icon={faPause as IconProp}\n                                    className={timer_icons_pause}\n                                    onClick={(): void => {\n                                        handlePause()\n                                    }} />\n                            }\n                        </section>\n                    </div>\n                    {noMemo && <Error message='You have not chosen a memo'\n                        click={click}\n                    />}\n\n                    <input type='text'\n                        className={\n                            (click > 1) ? dificultCase : inputMemo\n                        }\n                        ref={memo}\n                        onChange={(): void | string => {\n                            if (!tasks) return\n                            let id: ITaks[] = tasks.filter((task: ITaks) => {\n                                return task.memo === String(memo.current.value)\n                            })\n                            setHours(Number(id[0]?.hours) || 0)\n                            setMinutes(Number(id[0]?.minutes) || 0)\n                            setSeconds(Number(id[0]?.seconds) || 0)\n                            localStorage.setItem('oldmemo', String(memo.current.value))\n                        }} />\n                </div>\n            }\n            <Options start={start} />\n        </div>\n    );\n};\n\nexport default Home;\n\n","import { FC } from 'react';\nimport classes from './main.module.sass';\nimport SignIn from '../Auth/SignIn/SignIn';\nimport SignUp from '../Auth/SignUp/SignUp';\nimport Home from '../Home/Home';\nimport { Switch, Route } from \"react-router-dom\";\nimport { IClasses } from '../features/interfaces/interface';\n\nconst Main: FC = () => {\n    const { main }: IClasses = classes;\n    \n    return (\n        <main className={main}>\n            <Switch>\n                <Route path=\"/signin\">\n                    <SignIn />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </main>\n    );\n};\n\nexport default Main;","import { FC } from 'react';\nimport classes from './wrapper.module.sass';\nimport { IClasses} from '../features/interfaces/interface';\nimport { useAppSelector, RootState } from '../features/store';\n\nconst Wrapper: FC = ({ children }) => {\n    const { white_wrapper, black_wrapper }: IClasses = classes;\n    const color = useAppSelector((state: RootState) => state.user.color);\n    return (\n        <div className={color ? white_wrapper : black_wrapper}>\n            {children}\n        </div>\n    );\n};\n\nexport default Wrapper;","import { useEffect, FC } from 'react';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Wrapper from '../Wrapper/Wrapper';\nimport { useAppDispatch, useAppSelector, RootState } from '../features/store'\nimport { verifyToken } from '../features/Auth/userSlice';\nimport classes from './app.module.sass';\nimport { IClasses } from '../features/interfaces/interface';\n\n\nconst App: FC = () => {\n\n  const dispatch = useAppDispatch();\n  const user = useAppSelector((state: RootState) => state.user.user),\n    color = useAppSelector((state: RootState) => state.user.color);\n\n  const { black__theme, white__theme }: IClasses = classes;\n\n  useEffect(() => {\n    if (!localStorage.getItem('token')) return;\n    dispatch(verifyToken(localStorage.getItem('token')));\n    if ((user !== 'undefined') || (user !== null) || Object.keys(user).length === 0) {\n      dispatch(verifyToken(localStorage.getItem('token')));\n    }\n    if (!localStorage.getItem('hour')) return\n    localStorage.removeItem('hour');\n    return () => {\n      console.log('Unmount app');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  return (\n    <div className={color ? black__theme : white__theme}>\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport { store } from './features/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport dotenv from 'dotenv';\ndotenv.config();\n\n\nconst stripePromise = loadStripe(String(process.env.PUBLISHABLE_KEY));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Elements stripe={stripePromise}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </Elements>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"taskstable_wrapper__3hMuE\",\"task__item\":\"taskstable_task__item__z-6ts\",\"task__wrapper\":\"taskstable_task__wrapper__3lc4s\",\"memo\":\"taskstable_memo__VPN4b\",\"time\":\"taskstable_time__2nAVV\",\"createdAt\":\"taskstable_createdAt__2peYL\",\"remove\":\"taskstable_remove__2K7Nl\",\"header\":\"taskstable_header__3XMGB\",\"total__time\":\"taskstable_total__time__3-vER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"signin_wrapper__3Cepu\",\"signin\":\"signin_signin__2LvBI\",\"input__wrapper\":\"signin_input__wrapper__oj_Iq\",\"input__wrapper_submit\":\"signin_input__wrapper_submit__3fEHy\",\"password\":\"signin_password__3UhD5\",\"messageFromServer\":\"signin_messageFromServer__2NtWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white__theme_option_wrapper\":\"limitation_white__theme_option_wrapper__1dy9m\",\"black__theme_option_wrapper\":\"limitation_black__theme_option_wrapper__1zOZf\",\"danger\":\"limitation_danger__WgZqV\",\"lite\":\"limitation_lite__2N5el\",\"input_timeLimit\":\"limitation_input_timeLimit__gI3JO\",\"wrapper_input_timeLimit\":\"limitation_wrapper_input_timeLimit__2XoEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"signup_wrapper__esOkY\",\"signup\":\"signup_signup__gLpAn\",\"input__wrapper\":\"signup_input__wrapper__3FhF4\",\"input__wrapper_submit\":\"signup_input__wrapper_submit__Ps1VW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3zYxW\",\"bgcb\":\"header_bgcb__154SS\",\"I\":\"header_I__1u9i3\",\"bgca\":\"header_bgca__3LGL7\",\"II\":\"header_II__3SV7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white__theme_options_wrapper\":\"options_white__theme_options_wrapper__2e8wF\",\"black__theme_option_wrapper\":\"options_black__theme_option_wrapper__1pr7f\",\"link\":\"options_link__1n9ne\"};"],"sourceRoot":""}